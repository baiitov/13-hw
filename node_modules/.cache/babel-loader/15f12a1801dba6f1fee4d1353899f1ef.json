{"ast":null,"code":"import { validEmailRegex } from \"./Helpers/constants\";\nexport const initialState = {\n  nameValue: {\n    value: '',\n    isValid: null,\n    error: ''\n  },\n  emailValue: {\n    value: '',\n    isValid: null,\n    error: ''\n  },\n  passwordValue: {\n    value: '',\n    isValid: null,\n    error: ''\n  }\n};\nexport const UserReducer = (state, action) => {\n  switch (action.type) {\n    case 'NAME':\n      return { ...state,\n        nameValue: {\n          value: action.value,\n          isValid: nameValidRegExp.test(action.value)\n        }\n      };\n\n    case 'EMAIL':\n      return { ...state,\n        emailValue: {\n          value: action.value,\n          isValid: validEmailRegex.test(action.value)\n        }\n      };\n\n    case 'PASSWORD':\n      let a = action.value.split('', 2).join();\n      let b = action.value.split('').reverse().join('');\n      return { ...state,\n        passwordValue: {\n          value: b + a,\n          isValid: action.value.length > 5\n        }\n      };\n\n    case 'NAME_BLUR':\n      return { ...state,\n        nameValue: {\n          value: state.nameValue.value,\n          isValid: nameValidRegExp.test(state.nameValue.value),\n          error: nameValidRegExp.test(state.nameValue.value) ? '' : state.nameValue.value === '' ? 'введите имя' : 'username must have digits'\n        }\n      };\n\n    case 'EMAIL_BLUR':\n      return { ...state,\n        emailValue: {\n          value: state.emailValue.value,\n          isValid: validEmailRegex.test(state.emailValue.value),\n          error: validEmailRegex.test(state.emailValue.value) ? '' : state.emailValue.value === '' ? 'введите email' : 'gmail is not valid'\n        }\n      };\n\n    case 'PASSWORD_BLUR':\n      return { ...state,\n        passwordValue: {\n          password: state.passwordValue.value,\n          isValid: state.passwordValue.value.trim().length > 5,\n          error: state.passwordValue.value.trim().length > 5 ? '' : state.passwordValue.value === '' ? 'true' : 'not correct'\n        }\n      };\n\n    default:\n      break;\n  }\n};\n_c = UserReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReducer\");","map":{"version":3,"sources":["C:/Users/User/Desktop/hw 13/src/reducer.jsx"],"names":["validEmailRegex","initialState","nameValue","value","isValid","error","emailValue","passwordValue","UserReducer","state","action","type","nameValidRegExp","test","a","split","join","b","reverse","length","password","trim"],"mappings":"AAAA,SAASA,eAAT,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC3BC,EAAAA,SAAS,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,OAAO,EAAE,IAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GADgB;AAM3BC,EAAAA,UAAU,EAAE;AACXH,IAAAA,KAAK,EAAE,EADI;AAEXC,IAAAA,OAAO,EAAE,IAFE;AAGXC,IAAAA,KAAK,EAAE;AAHI,GANe;AAW3BE,EAAAA,aAAa,EAAE;AACdJ,IAAAA,KAAK,EAAE,EADO;AAEdC,IAAAA,OAAO,EAAE,IAFK;AAGdC,IAAAA,KAAK,EAAE;AAHO;AAXY,CAArB;AAkBP,OAAO,MAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,MAAL;AACC,aAAO,EACN,GAAGF,KADG;AAENP,QAAAA,SAAS,EAAE;AACVC,UAAAA,KAAK,EAAEO,MAAM,CAACP,KADJ;AAEVC,UAAAA,OAAO,EAAEQ,eAAe,CAACC,IAAhB,CAAqBH,MAAM,CAACP,KAA5B;AAFC;AAFL,OAAP;;AAOD,SAAK,OAAL;AACC,aAAO,EACN,GAAGM,KADG;AAENH,QAAAA,UAAU,EAAE;AACXH,UAAAA,KAAK,EAAEO,MAAM,CAACP,KADH;AAEXC,UAAAA,OAAO,EAAEJ,eAAe,CAACa,IAAhB,CAAqBH,MAAM,CAACP,KAA5B;AAFE;AAFN,OAAP;;AAOD,SAAK,UAAL;AACC,UAAIW,CAAC,GAAGJ,MAAM,CAACP,KAAP,CAAaY,KAAb,CAAmB,EAAnB,EAAuB,CAAvB,EAA0BC,IAA1B,EAAR;AACA,UAAIC,CAAC,GAAGP,MAAM,CAACP,KAAP,CAAaY,KAAb,CAAmB,EAAnB,EAAuBG,OAAvB,GAAiCF,IAAjC,CAAsC,EAAtC,CAAR;AACA,aAAO,EACN,GAAGP,KADG;AAENF,QAAAA,aAAa,EAAE;AACdJ,UAAAA,KAAK,EAAEc,CAAC,GAAGH,CADG;AAEdV,UAAAA,OAAO,EAAEM,MAAM,CAACP,KAAP,CAAagB,MAAb,GAAsB;AAFjB;AAFT,OAAP;;AAOD,SAAK,WAAL;AACC,aAAO,EACN,GAAGV,KADG;AAENP,QAAAA,SAAS,EAAE;AACVC,UAAAA,KAAK,EAAEM,KAAK,CAACP,SAAN,CAAgBC,KADb;AAEVC,UAAAA,OAAO,EAAEQ,eAAe,CAACC,IAAhB,CAAqBJ,KAAK,CAACP,SAAN,CAAgBC,KAArC,CAFC;AAGVE,UAAAA,KAAK,EAAEO,eAAe,CAACC,IAAhB,CAAqBJ,KAAK,CAACP,SAAN,CAAgBC,KAArC,IACJ,EADI,GAEJM,KAAK,CAACP,SAAN,CAAgBC,KAAhB,KAA0B,EAA1B,GACA,aADA,GAEA;AAPO;AAFL,OAAP;;AAYD,SAAK,YAAL;AACC,aAAO,EACN,GAAGM,KADG;AAENH,QAAAA,UAAU,EAAE;AACXH,UAAAA,KAAK,EAAEM,KAAK,CAACH,UAAN,CAAiBH,KADb;AAEXC,UAAAA,OAAO,EAAEJ,eAAe,CAACa,IAAhB,CAAqBJ,KAAK,CAACH,UAAN,CAAiBH,KAAtC,CAFE;AAGXE,UAAAA,KAAK,EAAEL,eAAe,CAACa,IAAhB,CAAqBJ,KAAK,CAACH,UAAN,CAAiBH,KAAtC,IACJ,EADI,GAEJM,KAAK,CAACH,UAAN,CAAiBH,KAAjB,KAA2B,EAA3B,GACA,eADA,GAEA;AAPQ;AAFN,OAAP;;AAYD,SAAK,eAAL;AACC,aAAO,EACN,GAAGM,KADG;AAENF,QAAAA,aAAa,EAAE;AACda,UAAAA,QAAQ,EAAEX,KAAK,CAACF,aAAN,CAAoBJ,KADhB;AAEdC,UAAAA,OAAO,EAAEK,KAAK,CAACF,aAAN,CAAoBJ,KAApB,CAA0BkB,IAA1B,GAAiCF,MAAjC,GAA0C,CAFrC;AAGdd,UAAAA,KAAK,EACJI,KAAK,CAACF,aAAN,CAAoBJ,KAApB,CAA0BkB,IAA1B,GAAiCF,MAAjC,GAA0C,CAA1C,GACG,EADH,GAEGV,KAAK,CAACF,aAAN,CAAoBJ,KAApB,KAA8B,EAA9B,GACA,MADA,GAEA;AARU;AAFT,OAAP;;AAcD;AACC;AArEF;AAuEA,CAxEM;KAAMK,W","sourcesContent":["import { validEmailRegex,  } from \"./Helpers/constants\"\r\n\r\nexport const initialState = {\r\n\tnameValue: {\r\n\t\tvalue: '',\r\n\t\tisValid: null,\r\n\t\terror: '',\r\n\t},\r\n\temailValue: {\r\n\t\tvalue: '',\r\n\t\tisValid: null,\r\n\t\terror: '',\r\n\t},\r\n\tpasswordValue: {\r\n\t\tvalue: '',\r\n\t\tisValid: null,\r\n\t\terror: '',\r\n\t},\r\n}\r\n\r\nexport const UserReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'NAME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnameValue: {\r\n\t\t\t\t\tvalue: action.value,\r\n\t\t\t\t\tisValid: nameValidRegExp.test(action.value),\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\tcase 'EMAIL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\temailValue: {\r\n\t\t\t\t\tvalue: action.value,\r\n\t\t\t\t\tisValid: validEmailRegex.test(action.value),\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\tcase 'PASSWORD':\r\n\t\t\tlet a = action.value.split('', 2).join()\r\n\t\t\tlet b = action.value.split('').reverse().join('')\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpasswordValue: {\r\n\t\t\t\t\tvalue: b + a,\r\n\t\t\t\t\tisValid: action.value.length > 5,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\tcase 'NAME_BLUR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnameValue: {\r\n\t\t\t\t\tvalue: state.nameValue.value,\r\n\t\t\t\t\tisValid: nameValidRegExp.test(state.nameValue.value),\r\n\t\t\t\t\terror: nameValidRegExp.test(state.nameValue.value)\r\n\t\t\t\t\t\t? ''\r\n\t\t\t\t\t\t: state.nameValue.value === ''\r\n\t\t\t\t\t\t? 'введите имя'\r\n\t\t\t\t\t\t: 'username must have digits',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\tcase 'EMAIL_BLUR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\temailValue: {\r\n\t\t\t\t\tvalue: state.emailValue.value,\r\n\t\t\t\t\tisValid: validEmailRegex.test(state.emailValue.value),\r\n\t\t\t\t\terror: validEmailRegex.test(state.emailValue.value)\r\n\t\t\t\t\t\t? ''\r\n\t\t\t\t\t\t: state.emailValue.value === ''\r\n\t\t\t\t\t\t? 'введите email'\r\n\t\t\t\t\t\t: 'gmail is not valid',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\tcase 'PASSWORD_BLUR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpasswordValue: {\r\n\t\t\t\t\tpassword: state.passwordValue.value,\r\n\t\t\t\t\tisValid: state.passwordValue.value.trim().length > 5,\r\n\t\t\t\t\terror:\r\n\t\t\t\t\t\tstate.passwordValue.value.trim().length > 5\r\n\t\t\t\t\t\t\t? ''\r\n\t\t\t\t\t\t\t: state.passwordValue.value === ''\r\n\t\t\t\t\t\t\t? 'true'\r\n\t\t\t\t\t\t\t: 'not correct',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\tbreak\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}