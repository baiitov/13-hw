{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\hw 13\\\\src\\\\components\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from 'react';\nimport './SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  nameValue: {\n    name: '',\n    isValid: false\n  },\n  emailValue: {\n    email: '',\n    isValid: false\n  },\n  passwordValue: {\n    password: '',\n    isValid: false\n  }\n};\n\nconst UserReducer = (state, action) => {\n  switch (action.type) {\n    case 'NAME':\n      return { ...state,\n        nameValue: {\n          name: action.value,\n          isValid: nameValid.test(action.value)\n        }\n      };\n\n    case 'EMAIL':\n      return { ...state,\n        emailValue: {\n          email: action.value,\n          isValid: validEmail.test(action.value)\n        }\n      };\n\n    case 'PASSWORD':\n      return { ...state,\n        passwordValue: {\n          password: action.value,\n          isValid: action.value.length > 5\n        }\n      };\n\n    default:\n      break;\n  }\n};\n\n_c = UserReducer;\n\nfunction SignUp(props) {\n  _s();\n\n  const [user, dicpatchUser] = useReducer(UserReducer, initialState);\n\n  const NameChangeHandler = event => {\n    dicpatchUser(type === \"\");\n  };\n\n  const EmailChangeHandler = event => {\n    setEmail(event.target.value);\n  };\n\n  const PasswordChangeHandler = event => {\n    setPassword(event.target.value);\n  };\n\n  const SubmitHandler = event => {\n    event.preventDefault();\n    const newData = {\n      name: name,\n      email: email,\n      password: password,\n      id: Math.random().toString()\n    };\n    console.log(newData);\n  };\n\n  const nameValid = RegExp(/[0-9]/);\n\n  if (!nameValid.test(String(name).toLocaleLowerCase)) {\n    console.log('error');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: SubmitHandler,\n    className: \"input_form\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: NameChangeHandler,\n      type: \"text\",\n      placeholder: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: EmailChangeHandler,\n      type: \"email\",\n      placeholder: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: PasswordChangeHandler,\n      type: \"password\",\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"OK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SignUp, \"zwCropAQ7STG0qz1ioSLt8J7zzM=\");\n\n_c2 = SignUp;\nexport default SignUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserReducer\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"sources":["C:/Users/User/Desktop/hw 13/src/components/SignUp.jsx"],"names":["React","useReducer","useState","initialState","nameValue","name","isValid","emailValue","email","passwordValue","password","UserReducer","state","action","type","value","nameValid","test","validEmail","length","SignUp","props","user","dicpatchUser","NameChangeHandler","event","EmailChangeHandler","setEmail","target","PasswordChangeHandler","setPassword","SubmitHandler","preventDefault","newData","id","Math","random","toString","console","log","RegExp","String","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from 'react'\r\nimport './SignUp.css'\r\nconst initialState={\r\n    nameValue:{\r\n        name:'',\r\n        isValid:false,\r\n    },\r\n    emailValue:{\r\n  email:'',\r\n  isValid:false,\r\n    },\r\n    passwordValue:{\r\n        password:'',\r\n        isValid:false,\r\n    }\r\n}\r\nconst UserReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'NAME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnameValue: {\r\n\t\t\t\t\tname: action.value,\r\n\t\t\t\t\tisValid: nameValid.test(action.value),\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\tcase 'EMAIL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\temailValue: {\r\n\t\t\t\t\temail: action.value,\r\n\t\t\t\t\tisValid: validEmail.test(action.value),\r\n\t\t\t\t},\r\n\t\t\t}\r\n            case'PASSWORD':\r\n            return{\r\n                ...state,\r\n                passwordValue:{\r\n                    password:action.value,\r\n                    isValid:action.value.length > 5,\r\n                }\r\n            }\r\n\r\n\t\tdefault:\r\n\t\t\tbreak\r\n\t}\r\n}\r\nfunction SignUp(props) {\r\n\tconst [user, dicpatchUser] = useReducer(UserReducer, initialState)\r\n\tconst NameChangeHandler = (event) => {\r\n\tdicpatchUser(type===\"\")\r\n\t}\r\n\tconst EmailChangeHandler = (event) => {\r\n\t\tsetEmail(event.target.value)\r\n\t}\r\n\tconst PasswordChangeHandler = (event) => {\r\n\t\tsetPassword(event.target.value)\r\n\t}\r\n\tconst SubmitHandler = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tconst newData = {\r\n\t\t\tname: name,\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t\tid: Math.random().toString(),\r\n\t\t}\r\n\t\tconsole.log(newData)\r\n\t}\r\n\r\n\tconst nameValid = RegExp(/[0-9]/)\r\n\tif (!nameValid.test(String(name).toLocaleLowerCase)) {\r\n\t\tconsole.log('error')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={SubmitHandler} className='input_form'>\r\n\t\t\t<label>username</label>\r\n\t\t\t<input\r\n\t\t\t\tonChange={NameChangeHandler}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='username'\r\n\t\t\t/>\r\n\r\n\t\t\t<label>login</label>\r\n\t\t\t<input\r\n\t\t\t\tonChange={EmailChangeHandler}\r\n\t\t\t\ttype='email'\r\n\t\t\t\tplaceholder='login'\r\n\t\t\t/>\r\n\r\n\t\t\t<label>password</label>\r\n\t\t\t<input\r\n\t\t\t\tonChange={PasswordChangeHandler}\r\n\t\t\t\ttype='password'\r\n\t\t\t\tplaceholder='password'\r\n\t\t\t/>\r\n\r\n\t\t\t<button>OK</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default SignUp\r\n"]},"metadata":{},"sourceType":"module"}